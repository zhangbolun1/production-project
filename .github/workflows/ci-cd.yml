name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install backend dependencies
        working-directory: backend
        run: |
          pip install -r requirements.txt

      - name: Run backend tests
        working-directory: backend
        run: |
          pytest

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install frontend dependencies
        working-directory: frontend
        run: |
          npm install

      - name: Run frontend tests
        working-directory: frontend
        run: |
          npm test -- --watchAll=false

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        working-directory: backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/housing-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/housing-backend:latest

      - name: Build and push frontend image
        working-directory: frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/housing-frontend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/housing-frontend:latest

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Trigger deployment
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"serviceId": "<backend_service_id>"}' \
            https://api.render.com/v1/deploys

          curl -X POST -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"serviceId": "<frontend_service_id>"}' \
            https://api.render.com/v1/deploys
