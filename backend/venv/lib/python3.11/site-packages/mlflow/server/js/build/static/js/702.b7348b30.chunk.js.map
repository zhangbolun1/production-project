{"version":3,"file":"static/js/702.b7348b30.chunk.js","mappings":"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","sources":["common/components/CollapsibleSection.tsx","common/components/JsonFormatting.tsx","common/components/ToggleIconButton.tsx","experiment-tracking/components/experiment-page/hooks/useRunsArtifacts.tsx","experiment-tracking/components/CompareRunArtifactView.tsx","experiment-tracking/components/experiment-page/utils/getCommonArtifacts.ts","experiment-tracking/components/CompareRunView.tsx","experiment-tracking/components/CompareRunPage.tsx","experiment-tracking/components/runs-charts/components/charts/ImageGridPlot.common.tsx","shared/building_blocks/Image.tsx","shared/web-shared/snippet/theme/databricks-duotone-dark.ts","shared/web-shared/snippet/theme/databricks-light.ts","shared/web-shared/snippet/index.tsx"],"sourcesContent":["/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport { Collapse } from 'antd';\nimport { useIntl } from 'react-intl';\nimport { SectionErrorBoundary } from './error-boundaries/SectionErrorBoundary';\nimport { ChevronRightIcon, importantify, useDesignSystemTheme } from '@databricks/design-system';\n\ntype OwnProps = {\n  title: string | any;\n  forceOpen?: boolean;\n  children: React.ReactNode;\n  showServerError?: boolean;\n  defaultCollapsed?: boolean;\n  onChange?: (...args: any[]) => any;\n};\n\n// @ts-expect-error TS(2565): Property 'defaultProps' is used before being assig... Remove this comment to see the full error message\ntype Props = OwnProps & typeof CollapsibleSection.defaultProps;\n\nexport function CollapsibleSection(props: Props) {\n  const { title, forceOpen, showServerError, defaultCollapsed, onChange } = props;\n  // We need to spread `activeKey` into <Collapse/> as an optional prop because its enumerability\n  // affects rendering, i.e. passing `activeKey={undefined}` is different from not passing activeKey\n  const activeKeyProp = forceOpen && { activeKey: ['1'] };\n  const defaultActiveKey = defaultCollapsed ? null : ['1'];\n  const { formatMessage } = useIntl();\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <Collapse\n      className=\"collapsible-section\"\n      // @ts-expect-error TS(2322): Type '{ '.collapsible-panel': { position: string; ... Remove this comment to see the full error message\n      css={classNames.wrapper}\n      bordered={false}\n      {...activeKeyProp}\n      // @ts-expect-error TS(2322): Type 'string[] | null' is not assignable to type '... Remove this comment to see the full error message\n      defaultActiveKey={defaultActiveKey}\n      expandIcon={({ isActive }) => (\n        // Font-size !important because antd's css clobbers any sort of svg size here.\n        <ChevronRightIcon\n          aria-label={\n            isActive\n              ? formatMessage(\n                  {\n                    defaultMessage: 'collapse {title}',\n                    description: 'Common component > collapsible section > alternative label when expand',\n                  },\n                  { title },\n                )\n              : formatMessage(\n                  {\n                    defaultMessage: 'expand {title}',\n                    description: 'Common component > collapsible section > alternative label when collapsed',\n                  },\n                  { title },\n                )\n          }\n          css={{ fontSize: '20px!important' }}\n          rotate={isActive ? 90 : 0}\n        />\n      )}\n      onChange={onChange}\n    >\n      <Collapse.Panel\n        className=\"collapsible-panel\"\n        header={title}\n        key=\"1\"\n        css={{\n          '&, .ant-collapse-header, .ant-collapse-content': importantify({\n            color: theme.colors.textPrimary,\n          }),\n        }}\n      >\n        <SectionErrorBoundary showServerError={showServerError}>{props.children}</SectionErrorBoundary>\n      </Collapse.Panel>\n    </Collapse>\n  );\n}\n\nconst classNames = {\n  wrapper: {\n    '.collapsible-panel': {\n      position: 'relative',\n    },\n    '& > .collapsible-panel > [role=\"button\"]:focus': {\n      outline: 'revert',\n    },\n  },\n};\n\nCollapsibleSection.defaultProps = {\n  forceOpen: false,\n};\n","import React from 'react';\nimport { CodeSnippet } from '@databricks/web-shared/snippet';\nimport { isObject } from 'lodash';\n\ninterface JsonPreviewProps {\n  json: string;\n  wrapperStyle?: React.CSSProperties;\n  overlayStyle?: React.CSSProperties;\n  codeSnippetStyle?: React.CSSProperties;\n}\n\nexport const JsonPreview: React.FC<JsonPreviewProps> = ({ json, wrapperStyle, overlayStyle, codeSnippetStyle }) => {\n  const { formattedJson, isJsonContent } = useFormattedJson(json);\n\n  const defaultWrapperStyle: React.CSSProperties = {\n    position: 'relative',\n    maxHeight: 'calc(1.5em * 9)',\n    overflow: 'hidden',\n  };\n\n  const defaultOverlayStyle: React.CSSProperties = {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    left: 6,\n    height: '2em',\n    background: 'linear-gradient(transparent, white)',\n  };\n\n  const defaultCodeSnippetStyle: React.CSSProperties = {\n    padding: '5px',\n    overflowX: 'hidden',\n  };\n\n  return (\n    <div style={{ ...defaultWrapperStyle, ...wrapperStyle }}>\n      {isJsonContent ? (\n        <>\n          <CodeSnippet language=\"json\" style={{ ...defaultCodeSnippetStyle, ...codeSnippetStyle }}>\n            {formattedJson}\n          </CodeSnippet>\n          <div css={{ ...defaultOverlayStyle, ...overlayStyle }}></div>\n        </>\n      ) : (\n        <>{json}</>\n      )}\n    </div>\n  );\n};\n\nexport function useFormattedJson(json: string) {\n  return React.useMemo(() => {\n    try {\n      const parsed = JSON.parse(json);\n      const isJson = isObject(parsed) && typeof parsed !== 'function' && !(parsed instanceof Date);\n      return {\n        formattedJson: isJson ? JSON.stringify(parsed, null, 2) : json,\n        isJsonContent: isJson,\n      };\n    } catch (e) {\n      return {\n        formattedJson: json,\n        isJsonContent: false,\n      };\n    }\n  }, [json]);\n}\n\nexport const FormattedJsonDisplay: React.FC<{ json: string }> = ({ json }) => {\n  const { formattedJson, isJsonContent } = useFormattedJson(json);\n\n  return (\n    <div css={{ whiteSpace: 'pre-wrap' }}>\n      {isJsonContent ? (\n        <CodeSnippet language=\"json\" wrapLongLines>\n          {formattedJson}\n        </CodeSnippet>\n      ) : (\n        <span>{json}</span>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport type { ButtonProps } from '@databricks/design-system';\nimport {\n  DesignSystemEventProviderAnalyticsEventTypes,\n  DesignSystemEventProviderComponentTypes,\n  useDesignSystemEventComponentCallbacks,\n  useDesignSystemTheme,\n} from '@databricks/design-system';\n\nexport interface ToggleIconButtonProps extends ButtonProps {\n  pressed?: boolean;\n}\n\n/**\n * WARNING: Temporary component!\n *\n * This component recreates \"Toggle button with icon\" pattern which is not\n * available in the design system yet.\n *\n * TODO: replace this component with the one from DuBois design system when available.\n */\nconst ToggleIconButton = React.forwardRef<HTMLButtonElement, ToggleIconButtonProps>(\n  (props: ToggleIconButtonProps, ref) => {\n    const {\n      pressed,\n      onClick,\n      icon,\n      onBlur,\n      onFocus,\n      onMouseEnter,\n      onMouseLeave,\n      componentId,\n      analyticsEvents,\n      type,\n      ...remainingProps\n    } = props;\n    const { theme } = useDesignSystemTheme();\n\n    const eventContext = useDesignSystemEventComponentCallbacks({\n      componentType: DesignSystemEventProviderComponentTypes.Button,\n      componentId,\n      analyticsEvents: analyticsEvents ?? [DesignSystemEventProviderAnalyticsEventTypes.OnClick],\n    });\n\n    return (\n      <button\n        onClick={(event) => {\n          eventContext.onClick(event);\n          onClick?.(event);\n        }}\n        css={{\n          cursor: 'pointer',\n          width: theme.general.heightSm,\n          height: theme.general.heightSm,\n          borderRadius: theme.legacyBorders.borderRadiusMd,\n          lineHeight: theme.typography.lineHeightBase,\n          padding: 0,\n          border: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          background: pressed ? theme.colors.actionDefaultBackgroundPress : 'transparent',\n          color: pressed ? theme.colors.actionDefaultTextPress : theme.colors.textSecondary,\n          '&:hover': {\n            background: theme.colors.actionDefaultBackgroundHover,\n            color: theme.colors.actionDefaultTextHover,\n          },\n        }}\n        ref={ref}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        {...remainingProps}\n      >\n        {icon}\n      </button>\n    );\n  },\n);\n\nexport { ToggleIconButton };\n","import { useEffect, useState } from 'react';\nimport { listArtifactsApi } from '../../../actions';\nimport { ArtifactListFilesResponse } from '../../../types';\n\n/**\n * Fetches artifacts given a list of run UUIDs\n * @param runUuids List of run UUIDs\n * @returns Object containing artifacts keyed by run UUID\n */\nexport const useRunsArtifacts = (runUuids: string[]) => {\n  const [artifactsKeyedByRun, setArtifactsKeyedByRun] = useState<Record<string, ArtifactListFilesResponse>>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchArtifacts = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      const artifactsByRun: Record<string, ArtifactListFilesResponse> = {};\n\n      try {\n        await Promise.all(\n          runUuids.map(async (runUuid) => {\n            const response = listArtifactsApi(runUuid);\n            const artifacts = (await response.payload) as ArtifactListFilesResponse;\n            artifactsByRun[runUuid] = artifacts;\n          }),\n        );\n        setArtifactsKeyedByRun(artifactsByRun);\n      } catch (err: any) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (runUuids.length > 0) {\n      fetchArtifacts();\n    } else {\n      setArtifactsKeyedByRun({});\n      setIsLoading(false);\n    }\n  }, [runUuids]);\n\n  return { artifactsKeyedByRun, isLoading, error };\n};\n","import { useState } from 'react';\nimport ShowArtifactPage from './artifact-view-components/ShowArtifactPage';\nimport { RunInfoEntity } from '../types';\nimport { useRunsArtifacts } from './experiment-page/hooks/useRunsArtifacts';\nimport { getCommonArtifacts } from './experiment-page/utils/getCommonArtifacts';\nimport { useDesignSystemTheme } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport { ArtifactViewTree } from './ArtifactViewTree';\nimport { getBasename } from '../../common/utils/FileUtils';\n\nexport const CompareRunArtifactView = ({\n  runUuids,\n  runInfos,\n  colWidth,\n}: {\n  runUuids: string[];\n  runInfos: RunInfoEntity[];\n  colWidth: number;\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const [artifactPath, setArtifactPath] = useState<string | undefined>();\n\n  const { artifactsKeyedByRun } = useRunsArtifacts(runUuids);\n  const commonArtifacts = getCommonArtifacts(artifactsKeyedByRun);\n\n  if (commonArtifacts.length === 0) {\n    return (\n      <h2>\n        <FormattedMessage\n          defaultMessage=\"No common artifacts to display.\"\n          description=\"Text shown when there are no common artifacts between the runs\"\n        />\n      </h2>\n    );\n  }\n  return (\n    <div\n      css={{\n        display: 'flex',\n        flexDirection: 'row',\n        height: '100vh',\n      }}\n    >\n      <div\n        css={{\n          backgroundColor: theme.colors.backgroundPrimary,\n          color: theme.colors.textPrimary,\n          flex: '1 1 0%',\n          whiteSpace: 'nowrap',\n          border: `1px solid ${theme.colors.grey300}`,\n          overflowY: 'auto',\n        }}\n      >\n        <ArtifactViewTree\n          data={commonArtifacts.map((path: string) => ({\n            id: path,\n            active: artifactPath === path,\n            name: getBasename(path),\n          }))}\n          onToggleTreebeard={({ id }) => setArtifactPath(id)}\n        />\n      </div>\n      <div\n        css={{\n          border: `1px solid ${theme.colors.grey300}`,\n          borderLeft: 'none',\n          display: 'flex',\n          flexDirection: 'column',\n          overflow: 'hidden',\n        }}\n      >\n        <div css={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n          {runUuids.map((runUuid, index) => (\n            <div\n              key={runUuid}\n              style={{\n                width: `${colWidth}px`,\n                borderBottom: `1px solid ${theme.colors.grey300}`,\n                padding: !artifactPath ? theme.spacing.md : 0,\n                overflow: 'auto',\n                whiteSpace: 'nowrap',\n              }}\n            >\n              <ShowArtifactPage runUuid={runUuid} artifactRootUri={runInfos[index].artifactUri} path={artifactPath} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { ArtifactFileInfo, ArtifactListFilesResponse } from '../../../types';\n\n/**\n * Gets the list of artifacts that are present in all runs in the given list of runs.\n * @param artifactsKeyedByRun Object containing artifacts keyed by run UUID\n * @returns List of common artifacts\n */\nexport const getCommonArtifacts = (artifactsKeyedByRun: Record<string, ArtifactListFilesResponse>) => {\n  const runUuids = Object.keys(artifactsKeyedByRun);\n\n  if (runUuids.length === 0) return [];\n\n  let commonArtifacts = artifactsKeyedByRun[runUuids[0]]?.files\n    ?.map((file: ArtifactFileInfo) => (file.is_dir ? null : file.path))\n    ?.filter((path: string | null) => path !== null);\n\n  if (!commonArtifacts || commonArtifacts.length === 0) return [];\n\n  for (let i = 1; i < runUuids.length; i++) {\n    const currentRunArtifacts = artifactsKeyedByRun[runUuids[i]]?.files?.map((file: any) => file.path);\n    commonArtifacts = commonArtifacts?.filter((path: any) => currentRunArtifacts.includes(path));\n    if (commonArtifacts.length === 0) {\n      break;\n    }\n  }\n\n  return commonArtifacts;\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage, type IntlShape } from 'react-intl';\nimport { Spacer, Switch, LegacyTabs, LegacyTooltip } from '@databricks/design-system';\n\nimport { getExperiment, getParams, getRunInfo, getRunTags } from '../reducers/Reducers';\nimport './CompareRunView.css';\nimport { CompareRunScatter } from './CompareRunScatter';\nimport { CompareRunBox } from './CompareRunBox';\nimport CompareRunContour from './CompareRunContour';\nimport Routes from '../routes';\nimport { Link } from '../../common/utils/RoutingUtils';\nimport { getLatestMetrics } from '../reducers/MetricReducer';\nimport CompareRunUtil from './CompareRunUtil';\nimport Utils from '../../common/utils/Utils';\nimport ParallelCoordinatesPlotPanel from './ParallelCoordinatesPlotPanel';\nimport { PageHeader } from '../../shared/building_blocks/PageHeader';\nimport { CollapsibleSection } from '../../common/components/CollapsibleSection';\nimport { shouldDisableLegacyRunCompareCharts } from '../../common/utils/FeatureUtils';\nimport { RunInfoEntity } from '../types';\nimport { CompareRunArtifactView } from './CompareRunArtifactView';\n\nconst { TabPane } = LegacyTabs;\n\ntype CompareRunViewProps = {\n  experiments: any[]; // TODO: PropTypes.instanceOf(Experiment)\n  experimentIds: string[];\n  comparedExperimentIds?: string[];\n  hasComparedExperimentsBefore?: boolean;\n  runInfos: RunInfoEntity[];\n  runUuids: string[];\n  metricLists: any[][];\n  paramLists: any[][];\n  tagLists: any[][];\n  runNames: string[];\n  runDisplayNames: string[];\n  intl: IntlShape;\n};\n\ntype CompareRunViewState = any;\nexport class CompareRunView extends Component<CompareRunViewProps, CompareRunViewState> {\n  compareRunViewRef: any;\n  runDetailsTableRef: any;\n\n  constructor(props: CompareRunViewProps) {\n    super(props);\n    this.state = {\n      tableWidth: null,\n      onlyShowParamDiff: false,\n      onlyShowTagDiff: false,\n      onlyShowMetricDiff: false,\n    };\n    this.onResizeHandler = this.onResizeHandler.bind(this);\n    this.onCompareRunTableScrollHandler = this.onCompareRunTableScrollHandler.bind(this);\n\n    this.runDetailsTableRef = React.createRef();\n    this.compareRunViewRef = React.createRef();\n  }\n\n  onResizeHandler(e: any) {\n    const table = this.runDetailsTableRef.current;\n    if (table !== null) {\n      const containerWidth = table.clientWidth;\n      this.setState({ tableWidth: containerWidth });\n    }\n  }\n\n  onCompareRunTableScrollHandler(e: any) {\n    const blocks = this.compareRunViewRef.current.querySelectorAll('.compare-run-table');\n    blocks.forEach((_: any, index: any) => {\n      const block = blocks[index];\n      if (block !== e.target) {\n        block.scrollLeft = e.target.scrollLeft;\n      }\n    });\n  }\n\n  componentDidMount() {\n    const pageTitle = this.props.intl.formatMessage(\n      {\n        description: 'Page title for the compare runs page',\n        defaultMessage: 'Comparing {runs} MLflow Runs',\n      },\n      {\n        runs: this.props.runInfos.length,\n      },\n    );\n    Utils.updatePageTitle(pageTitle);\n\n    window.addEventListener('resize', this.onResizeHandler, true);\n    window.dispatchEvent(new Event('resize'));\n  }\n\n  componentWillUnmount() {\n    // Avoid registering `onResizeHandler` every time this component mounts\n    window.removeEventListener('resize', this.onResizeHandler, true);\n  }\n\n  getTableColumnWidth() {\n    const minColWidth = 200;\n    let colWidth = minColWidth;\n\n    // @ts-expect-error TS(4111): Property 'tableWidth' comes from an index signatur... Remove this comment to see the full error message\n    if (this.state.tableWidth !== null) {\n      // @ts-expect-error TS(4111): Property 'tableWidth' comes from an index signatur... Remove this comment to see the full error message\n      colWidth = Math.round(this.state.tableWidth / (this.props.runInfos.length + 1));\n      if (colWidth < minColWidth) {\n        colWidth = minColWidth;\n      }\n    }\n    return colWidth;\n  }\n\n  renderExperimentNameRowItems() {\n    const { experiments } = this.props;\n    const experimentNameMap = Utils.getExperimentNameMap(Utils.sortExperimentsById(experiments));\n    return this.props.runInfos.map(({ experimentId, runUuid }) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      const { name, basename } = experimentNameMap[experimentId];\n      return (\n        <td className=\"meta-info\" key={runUuid}>\n          <Link to={Routes.getExperimentPageRoute(experimentId)} title={name}>\n            {basename}\n          </Link>\n        </td>\n      );\n    });\n  }\n\n  hasMultipleExperiments() {\n    return this.props.experimentIds.length > 1;\n  }\n\n  shouldShowExperimentNameRow() {\n    return this.props.hasComparedExperimentsBefore || this.hasMultipleExperiments();\n  }\n\n  getExperimentPageLink(experimentId: any, experimentName: any) {\n    return <Link to={Routes.getExperimentPageRoute(experimentId)}>{experimentName}</Link>;\n  }\n\n  getCompareExperimentsPageLinkText(numExperiments: any) {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Displaying Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb nav item to link to compare-experiments page on compare runs page\"\n        values={{ numExperiments }}\n      />\n    );\n  }\n\n  getCompareExperimentsPageLink(experimentIds: any) {\n    return (\n      <Link to={Routes.getCompareExperimentsPageRoute(experimentIds)}>\n        {this.getCompareExperimentsPageLinkText(experimentIds.length)}\n      </Link>\n    );\n  }\n\n  getExperimentLink() {\n    const { comparedExperimentIds, hasComparedExperimentsBefore, experimentIds, experiments } = this.props;\n\n    if (hasComparedExperimentsBefore) {\n      return this.getCompareExperimentsPageLink(comparedExperimentIds);\n    }\n\n    if (this.hasMultipleExperiments()) {\n      return this.getCompareExperimentsPageLink(experimentIds);\n    }\n\n    return this.getExperimentPageLink(experimentIds[0], experiments[0].name);\n  }\n\n  getTitle() {\n    return this.hasMultipleExperiments() ? (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb title for compare runs page with multiple experiments\"\n        values={{\n          numRuns: this.props.runInfos.length,\n          numExperiments: this.props.experimentIds.length,\n        }}\n      />\n    ) : (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from 1 Experiment\"\n        description=\"Breadcrumb title for compare runs page with single experiment\"\n        values={{\n          numRuns: this.props.runInfos.length,\n        }}\n      />\n    );\n  }\n\n  renderParamTable(colWidth: any) {\n    const dataRows = this.renderDataRows(\n      this.props.paramLists,\n      colWidth,\n      // @ts-expect-error TS(4111): Property 'onlyShowParamDiff' comes from an index s... Remove this comment to see the full error message\n      this.state.onlyShowParamDiff,\n      true,\n      (key: any, data: any) => key,\n      (value) => {\n        try {\n          const jsonValue = parsePythonDictString(value);\n\n          // Pretty print if parsed value is an object or array\n          if (typeof jsonValue === 'object' && jsonValue !== null) {\n            return this.renderPrettyJson(jsonValue);\n          } else {\n            return value;\n          }\n        } catch (e) {\n          return value;\n        }\n      },\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No parameters to display.\"\n            description=\"Text shown when there are no parameters to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <table\n        className=\"table compare-table compare-run-table\"\n        css={{ maxHeight: '500px' }}\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        <tbody>{dataRows}</tbody>\n      </table>\n    );\n  }\n\n  renderPrettyJson(jsonValue: any) {\n    return <pre>{JSON.stringify(jsonValue, null, 2)}</pre>;\n  }\n\n  renderMetricTable(colWidth: any, experimentIds: any) {\n    const dataRows = this.renderDataRows(\n      this.props.metricLists,\n      colWidth,\n      // @ts-expect-error TS(4111): Property 'onlyShowMetricDiff' comes from an index ... Remove this comment to see the full error message\n      this.state.onlyShowMetricDiff,\n      false,\n      (key, data) => {\n        return (\n          <Link\n            to={Routes.getMetricPageRoute(\n              this.props.runInfos.map((info) => info.runUuid).filter((uuid, idx) => data[idx] !== undefined),\n              key,\n              experimentIds,\n            )}\n            title=\"Plot chart\"\n          >\n            {key}\n            <i className=\"fas fa-chart-line\" css={{ paddingLeft: '6px' }} />\n          </Link>\n        );\n      },\n      Utils.formatMetric,\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No metrics to display.\"\n            description=\"Text shown when there are no metrics to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <table\n        className=\"table compare-table compare-run-table\"\n        css={{ maxHeight: '300px' }}\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        <tbody>{dataRows}</tbody>\n      </table>\n    );\n  }\n\n  renderArtifactTable(colWidth: any) {\n    return <CompareRunArtifactView runUuids={this.props.runUuids} runInfos={this.props.runInfos} colWidth={colWidth} />;\n  }\n\n  renderTagTable(colWidth: any) {\n    const dataRows = this.renderDataRows(\n      this.props.tagLists,\n      colWidth,\n      // @ts-expect-error TS(4111): Property 'onlyShowTagDiff' comes from an index sig... Remove this comment to see the full error message\n      this.state.onlyShowTagDiff,\n      true,\n    );\n    if (dataRows.length === 0) {\n      return (\n        <h2>\n          <FormattedMessage\n            defaultMessage=\"No tags to display.\"\n            description=\"Text shown when there are no tags to display\"\n          />\n        </h2>\n      );\n    }\n    return (\n      <table\n        className=\"table compare-table compare-run-table\"\n        css={{ maxHeight: '500px' }}\n        onScroll={this.onCompareRunTableScrollHandler}\n      >\n        <tbody>{dataRows}</tbody>\n      </table>\n    );\n  }\n\n  renderTimeRows(colWidthStyle: any) {\n    const unknown = (\n      <FormattedMessage\n        defaultMessage=\"(unknown)\"\n        description=\"Filler text when run's time information is unavailable\"\n      />\n    );\n    const getTimeAttributes = (runInfo: RunInfoEntity) => {\n      const startTime = runInfo.startTime;\n      const endTime = runInfo.endTime;\n      return {\n        runUuid: runInfo.runUuid,\n        startTime: startTime ? Utils.formatTimestamp(startTime) : unknown,\n        endTime: endTime ? Utils.formatTimestamp(endTime) : unknown,\n        duration: startTime && endTime ? Utils.getDuration(startTime, endTime) : unknown,\n      };\n    };\n    const timeAttributes = this.props.runInfos.map(getTimeAttributes);\n    const rows = [\n      {\n        key: 'startTime',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"Start Time:\"\n            description=\"Row title for the start time of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, startTime }) => [runUuid, startTime]),\n      },\n      {\n        key: 'endTime',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"End Time:\"\n            description=\"Row title for the end time of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, endTime }) => [runUuid, endTime]),\n      },\n      {\n        key: 'duration',\n        title: (\n          <FormattedMessage\n            defaultMessage=\"Duration:\"\n            description=\"Row title for the duration of runs on the experiment compare runs page\"\n          />\n        ),\n        data: timeAttributes.map(({ runUuid, duration }) => [runUuid, duration]),\n      },\n    ];\n    return rows.map(({ key, title, data }) => (\n      <tr key={key}>\n        <th scope=\"row\" className=\"head-value sticky-header\" css={colWidthStyle}>\n          {title}\n        </th>\n        {data.map(([runUuid, value]) => (\n          <td className=\"data-value\" key={runUuid} css={colWidthStyle}>\n            <LegacyTooltip\n              title={value}\n              // @ts-expect-error TS(2322): Type '{ children: any; title: any; color: string; ... Remove this comment to see the full error message\n              color=\"gray\"\n              placement=\"topLeft\"\n              overlayStyle={{ maxWidth: '400px' }}\n              // mouseEnterDelay prop is not available in DuBois design system (yet)\n              dangerouslySetAntdProps={{ mouseEnterDelay: 1 }}\n            >\n              {value}\n            </LegacyTooltip>\n          </td>\n        ))}\n      </tr>\n    ));\n  }\n\n  render() {\n    const { experimentIds } = this.props;\n    const { runInfos, runNames, paramLists, metricLists, runUuids } = this.props;\n\n    const colWidth = this.getTableColumnWidth();\n    const colWidthStyle = this.genWidthStyle(colWidth);\n\n    const title = this.getTitle();\n    /* eslint-disable-next-line prefer-const */\n    let breadcrumbs = [this.getExperimentLink()];\n\n    const paramsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Parameters',\n      description: 'Row group title for parameters of runs on the experiment compare runs page',\n    });\n\n    const metricsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Metrics',\n      description: 'Row group title for metrics of runs on the experiment compare runs page',\n    });\n\n    const artifactsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Artifacts',\n      description: 'Row group title for artifacts of runs on the experiment compare runs page',\n    });\n\n    const tagsLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Tags',\n      description: 'Row group title for tags of runs on the experiment compare runs page',\n    });\n    const diffOnlyLabel = this.props.intl.formatMessage({\n      defaultMessage: 'Show diff only',\n      description:\n        // eslint-disable-next-line max-len\n        'Label next to the switch that controls displaying only differing values in comparision tables on the compare runs page',\n    });\n\n    const displayChartSection = !shouldDisableLegacyRunCompareCharts();\n\n    return (\n      <div className=\"CompareRunView\" ref={this.compareRunViewRef}>\n        <PageHeader title={title} breadcrumbs={breadcrumbs} />\n        {displayChartSection && (\n          <CollapsibleSection\n            title={this.props.intl.formatMessage({\n              defaultMessage: 'Visualizations',\n              description: 'Tabs title for plots on the compare runs page',\n            })}\n          >\n            <LegacyTabs>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Parallel Coordinates Plot\"\n                    // eslint-disable-next-line max-len\n                    description=\"Tab pane title for parallel coordinate plots on the compare runs page\"\n                  />\n                }\n                key=\"parallel-coordinates-plot\"\n              >\n                <ParallelCoordinatesPlotPanel runUuids={this.props.runUuids} />\n              </TabPane>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Scatter Plot\"\n                    description=\"Tab pane title for scatterplots on the compare runs page\"\n                  />\n                }\n                key=\"scatter-plot\"\n              >\n                <CompareRunScatter runUuids={this.props.runUuids} runDisplayNames={this.props.runDisplayNames} />\n              </TabPane>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Box Plot\"\n                    description=\"Tab pane title for box plot on the compare runs page\"\n                  />\n                }\n                key=\"box-plot\"\n              >\n                <CompareRunBox\n                  runUuids={runUuids}\n                  runInfos={runInfos}\n                  paramLists={paramLists}\n                  metricLists={metricLists}\n                />\n              </TabPane>\n              <TabPane\n                tab={\n                  <FormattedMessage\n                    defaultMessage=\"Contour Plot\"\n                    description=\"Tab pane title for contour plots on the compare runs page\"\n                  />\n                }\n                key=\"contour-plot\"\n              >\n                <CompareRunContour runUuids={this.props.runUuids} runDisplayNames={this.props.runDisplayNames} />\n              </TabPane>\n            </LegacyTabs>\n          </CollapsibleSection>\n        )}\n        <CollapsibleSection\n          title={this.props.intl.formatMessage({\n            defaultMessage: 'Run details',\n            description: 'Compare table title on the compare runs page',\n          })}\n        >\n          <table\n            className=\"table compare-table compare-run-table\"\n            ref={this.runDetailsTableRef}\n            onScroll={this.onCompareRunTableScrollHandler}\n          >\n            <thead>\n              <tr>\n                <th scope=\"row\" className=\"head-value sticky-header\" css={colWidthStyle}>\n                  <FormattedMessage\n                    defaultMessage=\"Run ID:\"\n                    description=\"Row title for the run id on the experiment compare runs page\"\n                  />\n                </th>\n                {this.props.runInfos.map((r) => (\n                  <th scope=\"row\" className=\"data-value\" key={r.runUuid} css={colWidthStyle}>\n                    <LegacyTooltip\n                      title={r.runUuid}\n                      // @ts-expect-error TS(2322): Type '{ children: Element; title: any; color: stri... Remove this comment to see the full error message\n                      color=\"gray\"\n                      placement=\"topLeft\"\n                      overlayStyle={{ maxWidth: '400px' }}\n                      mouseEnterDelay={1.0}\n                    >\n                      <Link to={Routes.getRunPageRoute(r.experimentId ?? '0', r.runUuid ?? '')}>{r.runUuid}</Link>\n                    </LegacyTooltip>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <th scope=\"row\" className=\"head-value sticky-header\" css={colWidthStyle}>\n                  <FormattedMessage\n                    defaultMessage=\"Run Name:\"\n                    description=\"Row title for the run name on the experiment compare runs page\"\n                  />\n                </th>\n                {runNames.map((runName, i) => {\n                  return (\n                    <td className=\"data-value\" key={runInfos[i].runUuid} css={colWidthStyle}>\n                      <div className=\"truncate-text single-line\">\n                        <LegacyTooltip\n                          title={runName}\n                          // @ts-expect-error TS(2322): Type '{ children: string; title: string; color: st... Remove this comment to see the full error message\n                          color=\"gray\"\n                          placement=\"topLeft\"\n                          overlayStyle={{ maxWidth: '400px' }}\n                          mouseEnterDelay={1.0}\n                        >\n                          {runName}\n                        </LegacyTooltip>\n                      </div>\n                    </td>\n                  );\n                })}\n              </tr>\n              {this.renderTimeRows(colWidthStyle)}\n              {this.shouldShowExperimentNameRow() && (\n                <tr>\n                  <th scope=\"row\" className=\"data-value\">\n                    <FormattedMessage\n                      defaultMessage=\"Experiment Name:\"\n                      // eslint-disable-next-line max-len\n                      description=\"Row title for the experiment IDs of runs on the experiment compare runs page\"\n                    />\n                  </th>\n                  {this.renderExperimentNameRowItems()}\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </CollapsibleSection>\n        <CollapsibleSection title={paramsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_570\"\n            label={diffOnlyLabel}\n            aria-label={[paramsLabel, diffOnlyLabel].join(' - ')}\n            // @ts-expect-error TS(4111): Property 'onlyShowParamDiff' comes from an index s... Remove this comment to see the full error message\n            checked={this.state.onlyShowParamDiff}\n            onChange={(checked, e) => this.setState({ onlyShowParamDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderParamTable(colWidth)}\n        </CollapsibleSection>\n        <CollapsibleSection title={metricsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_581\"\n            label={diffOnlyLabel}\n            aria-label={[metricsLabel, diffOnlyLabel].join(' - ')}\n            // @ts-expect-error TS(4111): Property 'onlyShowMetricDiff' comes from an index ... Remove this comment to see the full error message\n            checked={this.state.onlyShowMetricDiff}\n            onChange={(checked, e) => this.setState({ onlyShowMetricDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderMetricTable(colWidth, experimentIds)}\n        </CollapsibleSection>\n        <CollapsibleSection title={artifactsLabel}>{this.renderArtifactTable(colWidth)}</CollapsibleSection>\n        <CollapsibleSection title={tagsLabel}>\n          <Switch\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_comparerunview.tsx_592\"\n            label={diffOnlyLabel}\n            aria-label={[tagsLabel, diffOnlyLabel].join(' - ')}\n            // @ts-expect-error TS(4111): Property 'onlyShowTagDiff' comes from an index sig... Remove this comment to see the full error message\n            checked={this.state.onlyShowTagDiff}\n            onChange={(checked, e) => this.setState({ onlyShowTagDiff: checked })}\n          />\n          <Spacer size=\"lg\" />\n          {this.renderTagTable(colWidth)}\n        </CollapsibleSection>\n      </div>\n    );\n  }\n\n  genWidthStyle(width: any) {\n    return {\n      width: `${width}px`,\n      minWidth: `${width}px`,\n      maxWidth: `${width}px`,\n    };\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  renderDataRows(\n    list: any,\n    colWidth: any,\n    onlyShowDiff: any,\n    highlightDiff = false,\n    headerMap = (key: any, data: any) => key,\n    formatter = (value: any) => value,\n  ) {\n    // @ts-expect-error TS(2554): Expected 2 arguments, but got 1.\n    const keys = CompareRunUtil.getKeys(list);\n    const data = {};\n    const checkHasDiff = (values: any) => values.some((x: any) => x !== values[0]);\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k] = { values: Array(list.length).fill(undefined) }));\n    list.forEach((records: any, i: any) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      records.forEach((r: any) => (data[r.key].values[i] = r.value));\n    });\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k].hasDiff = checkHasDiff(data[k].values)));\n\n    const colWidthStyle = this.genWidthStyle(colWidth);\n\n    return (\n      keys\n        // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        .filter((k) => !onlyShowDiff || data[k].hasDiff)\n        .map((k) => {\n          // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          const { values, hasDiff } = data[k];\n          const rowClass = highlightDiff && hasDiff ? 'diff-row' : undefined;\n          return (\n            <tr key={k} className={rowClass}>\n              <th scope=\"row\" className=\"head-value sticky-header\" css={colWidthStyle}>\n                {headerMap(k, values)}\n              </th>\n              {values.map((value: any, i: any) => {\n                const cellText = value === undefined ? '' : formatter(value);\n                return (\n                  <td className=\"data-value\" key={this.props.runInfos[i].runUuid} css={colWidthStyle}>\n                    <LegacyTooltip\n                      title={cellText}\n                      // @ts-expect-error TS(2322): Type '{ children: Element; title: any; color: stri... Remove this comment to see the full error message\n                      color=\"gray\"\n                      placement=\"topLeft\"\n                      overlayStyle={{ maxWidth: '400px' }}\n                      mouseEnterDelay={1.0}\n                    >\n                      <span className=\"truncate-text single-line\">{cellText}</span>\n                    </LegacyTooltip>\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const { comparedExperimentIds, hasComparedExperimentsBefore } = state.compareExperiments;\n  const runInfos: any = [];\n  const metricLists: any = [];\n  const paramLists: any = [];\n  const tagLists: any = [];\n  const runNames: any = [];\n  const runDisplayNames: any = [];\n  const { experimentIds, runUuids } = ownProps;\n  const experiments = experimentIds.map((experimentId: any) => getExperiment(experimentId, state));\n  runUuids.forEach((runUuid: any) => {\n    const runInfo = getRunInfo(runUuid, state);\n    // Skip processing data if run info is not available yet\n    if (!runInfo) {\n      return;\n    }\n    runInfos.push(runInfo);\n    metricLists.push(Object.values(getLatestMetrics(runUuid, state)));\n    paramLists.push(Object.values(getParams(runUuid, state)));\n    const runTags = getRunTags(runUuid, state);\n    const visibleTags = Utils.getVisibleTagValues(runTags).map(([key, value]) => ({\n      key,\n      value,\n    }));\n    tagLists.push(visibleTags);\n    runDisplayNames.push(Utils.getRunDisplayName(runInfo, runUuid));\n    runNames.push(Utils.getRunName(runInfo));\n  });\n  return {\n    experiments,\n    runInfos,\n    metricLists,\n    paramLists,\n    tagLists,\n    runNames,\n    runDisplayNames,\n    comparedExperimentIds,\n    hasComparedExperimentsBefore,\n  };\n};\n\n/**\n * Parse a Python dictionary in string format into a JSON object.\n * @param value The Python dictionary string to parse\n * @returns The parsed JSON object, or null if parsing fails\n */\nconst parsePythonDictString = (value: string) => {\n  try {\n    const jsonString = value.replace(/'/g, '\"');\n    return JSON.parse(jsonString);\n  } catch (e) {\n    console.error('Failed to parse string to JSON:', e);\n    return null;\n  }\n};\n\nexport default connect(mapStateToProps)(injectIntl(CompareRunView));\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport qs from 'qs';\nimport { connect } from 'react-redux';\nimport { getRunApi, getExperimentApi } from '../actions';\nimport RequestStateWrapper from '../../common/components/RequestStateWrapper';\nimport CompareRunView from './CompareRunView';\nimport { getUUID } from '../../common/utils/ActionUtils';\nimport { PageContainer } from '../../common/components/PageContainer';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\nimport type { WithRouterNextProps } from '../../common/utils/withRouterNext';\nimport { withErrorBoundary } from '../../common/utils/withErrorBoundary';\nimport ErrorUtils from '../../common/utils/ErrorUtils';\n\ntype CompareRunPageProps = {\n  experimentIds: string[];\n  runUuids: string[];\n  dispatch: (...args: any[]) => any;\n};\n\nclass CompareRunPageImpl extends Component<CompareRunPageProps> {\n  requestIds: any;\n\n  constructor(props: CompareRunPageProps) {\n    super(props);\n    this.requestIds = [];\n  }\n\n  fetchExperiments() {\n    return this.props.experimentIds.map((experimentId) => {\n      const experimentRequestId = getUUID();\n      this.props.dispatch(getExperimentApi(experimentId, experimentRequestId));\n      return experimentRequestId;\n    });\n  }\n\n  componentDidMount() {\n    this.requestIds.push(...this.fetchExperiments());\n    this.props.runUuids.forEach((runUuid) => {\n      const requestId = getUUID();\n      this.requestIds.push(requestId);\n      this.props.dispatch(getRunApi(runUuid, requestId));\n    });\n  }\n\n  render() {\n    return (\n      <PageContainer>\n        <RequestStateWrapper\n          requestIds={this.requestIds}\n          // eslint-disable-next-line no-trailing-spaces\n        >\n          <CompareRunView runUuids={this.props.runUuids} experimentIds={this.props.experimentIds} />\n        </RequestStateWrapper>\n      </PageContainer>\n    );\n  }\n}\n\n/**\n * When integrated via IFrame in Kubeflow it re-encodes the URI (sometimes multiple times), leading to an unparsable JSON.\n * This function decodes the URI until it is parsable.\n */\nconst decodeURI = (uri: string): string => {\n  const decodedURI = decodeURIComponent(uri);\n  if (uri !== decodedURI) {\n    return decodeURI(decodedURI);\n  }\n  return decodedURI;\n};\n\nconst mapStateToProps = (state: any, ownProps: WithRouterNextProps) => {\n  const { location } = ownProps;\n  const locationSearchDecoded = decodeURI(location.search);\n  const searchValues = qs.parse(locationSearchDecoded);\n  // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n  const runUuids = JSON.parse(searchValues['?runs']);\n  // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n  const experimentIds = JSON.parse(searchValues['experiments']);\n  return { experimentIds, runUuids };\n};\n\nconst CompareRunPage = withRouterNext(connect(mapStateToProps)(CompareRunPageImpl));\n\nexport default withErrorBoundary(ErrorUtils.mlflowServices.RUN_TRACKING, CompareRunPage);\n","import { ImageIcon } from '@databricks/design-system';\nimport { GenericSkeleton, useDesignSystemTheme } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport { getArtifactLocationUrl } from '@mlflow/mlflow/src/common/utils/ArtifactUtils';\nimport { ImageEntity } from '@mlflow/mlflow/src/experiment-tracking/types';\nimport { useState } from 'react';\nimport { Typography } from '@databricks/design-system';\nimport { ImagePreviewGroup, Image } from '../../../../../shared/building_blocks/Image';\n\nexport const MAX_IMAGE_SIZE = 225;\nexport const MIN_IMAGE_SIZE = 120;\nexport const IMAGE_GAP_SIZE = 10;\n\nexport const getImageSize = (numImages: number, width: number) => {\n  // Scale image size based on number of images\n  const maxImagesPerRow = Math.floor(width / MIN_IMAGE_SIZE);\n  if (numImages < maxImagesPerRow) {\n    return Math.min(width / numImages - IMAGE_GAP_SIZE, MAX_IMAGE_SIZE);\n  }\n  return width / maxImagesPerRow - IMAGE_GAP_SIZE;\n};\n\ntype ImagePlotProps = {\n  imageUrl: string;\n  compressedImageUrl: string;\n  imageSize?: number;\n  maxImageSize?: number;\n};\n\nexport const ImagePlot = ({ imageUrl, compressedImageUrl, imageSize, maxImageSize }: ImagePlotProps) => {\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div css={{ width: imageSize, height: imageSize || '100%' }}>\n      <div css={{ height: imageSize || '100%' }}>\n        {compressedImageUrl === undefined ? (\n          <GenericSkeleton label=\"Loading...\" css={{ height: imageSize, width: imageSize }} />\n        ) : (\n          <div\n            css={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              width: imageSize || '100%',\n              height: imageSize || '100%',\n              maxWidth: maxImageSize,\n              maxHeight: maxImageSize,\n              backgroundColor: theme.colors.backgroundSecondary,\n              '& .ant-image': {\n                height: '100%',\n                display: 'flex',\n                alignItems: 'center',\n              },\n            }}\n          >\n            <ImagePreviewGroup visible={previewVisible} onVisibleChange={setPreviewVisible}>\n              <Image\n                src={compressedImageUrl}\n                preview={{ src: imageUrl }}\n                style={{ maxWidth: maxImageSize || '100%', maxHeight: maxImageSize || '100%' }}\n              />\n            </ImagePreviewGroup>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const ImagePlotWithHistory = ({\n  metadataByStep,\n  imageSize,\n  step,\n  runUuid,\n}: {\n  metadataByStep: Record<number, ImageEntity>;\n  imageSize?: number;\n  step: number;\n  runUuid: string;\n}) => {\n  const { theme } = useDesignSystemTheme();\n\n  if (metadataByStep[step] === undefined) {\n    return (\n      <div\n        css={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          textAlign: 'center',\n          width: imageSize,\n          height: imageSize,\n          backgroundColor: theme.colors.backgroundSecondary,\n          padding: theme.spacing.md,\n        }}\n      >\n        <ImageIcon />\n        <FormattedMessage\n          defaultMessage=\"No image logged at this step\"\n          description=\"Experiment tracking > runs charts > charts > image plot with history > no image text\"\n        />\n      </div>\n    );\n  }\n  return (\n    <ImagePlot\n      imageUrl={getArtifactLocationUrl(metadataByStep[step].filepath, runUuid)}\n      compressedImageUrl={getArtifactLocationUrl(metadataByStep[step].compressed_filepath, runUuid)}\n      imageSize={imageSize}\n    />\n  );\n};\n\nexport const EmptyImageGridPlot = () => {\n  return (\n    <div\n      css={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        fontSize: 16,\n      }}\n    >\n      <Typography.Title css={{ marginTop: 16 }} color=\"secondary\" level={3}>\n        Compare logged images\n      </Typography.Title>\n      <Typography.Text css={{ marginBottom: 16 }} color=\"secondary\">\n        Use the image grid chart to compare logged images across runs.\n      </Typography.Text>\n    </div>\n  );\n};\n","import {\n  ArrowLeftIcon,\n  ArrowRightIcon,\n  CloseIcon,\n  DesignSystemContext,\n  RedoIcon,\n  UndoIcon,\n  ZoomInIcon,\n  ZoomOutIcon,\n} from '@databricks/design-system';\nimport { useContext } from 'react';\nimport RcImage from 'rc-image';\nimport './Image.css';\n\nconst icons = {\n  rotateLeft: <UndoIcon />,\n  rotateRight: <RedoIcon />,\n  zoomIn: <ZoomInIcon />,\n  zoomOut: <ZoomOutIcon />,\n  close: <CloseIcon />,\n  left: <ArrowLeftIcon />,\n  right: <ArrowRightIcon />,\n};\n\nexport const ImagePreviewGroup = ({\n  children,\n  visible,\n  onVisibleChange,\n}: {\n  children: React.ReactNode;\n  visible: boolean;\n  onVisibleChange: (v: boolean) => void;\n}) => {\n  const { getPopupContainer } = useContext(DesignSystemContext);\n\n  return (\n    <RcImage.PreviewGroup\n      icons={icons}\n      preview={{\n        visible: visible,\n        getContainer: getPopupContainer,\n        onVisibleChange: (v) => onVisibleChange(v),\n      }}\n    >\n      {children}\n    </RcImage.PreviewGroup>\n  );\n};\n\nexport { RcImage as Image };\n","/**\n * Adapted from `duotone-dark`\n * Ref: https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/b2457268891948f7005ccf539a70c000f0695bde/src/styles/prism/duotone-dark.js\n */\n\nconst databricksDuotoneDarkTheme = {\n  'code[class*=\"language-\"]': {\n    fontFamily:\n      'Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", \"Courier New\", Courier, monospace',\n    fontSize: '14px',\n    lineHeight: '1.375',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    background: '#2a2734',\n    color: '#5DFAFC', // D\n  },\n  'pre[class*=\"language-\"]': {\n    fontFamily:\n      'Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", \"Courier New\", Courier, monospace',\n    fontSize: '14px',\n    lineHeight: '1.375',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    background: '#2a2734',\n    color: '#5DFAFC', // D\n    padding: '1em',\n    margin: '.5em 0',\n    overflow: 'auto',\n  },\n  'pre > code[class*=\"language-\"]': {\n    fontSize: '1em',\n  },\n  'pre[class*=\"language-\"]::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"] ::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"]::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"] ::-moz-selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"]::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'pre[class*=\"language-\"] ::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"]::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  'code[class*=\"language-\"] ::selection': {\n    textShadow: 'none',\n    background: '#6a51e6',\n  },\n  ':not(pre) > code[class*=\"language-\"]': {\n    padding: '.1em',\n    borderRadius: '.3em',\n  },\n  comment: {\n    color: '#6c6783',\n  },\n  prolog: {\n    color: '#6c6783',\n  },\n  doctype: {\n    color: '#6c6783',\n  },\n  cdata: {\n    color: '#6c6783',\n  },\n  punctuation: {\n    color: '#6c6783',\n  },\n  namespace: {\n    Opacity: '.7',\n  },\n  tag: {\n    color: '#3AACE2', // D\n  },\n  operator: {\n    color: '#3AACE2', // D\n  },\n  number: {\n    color: '#3AACE2', // D\n  },\n  property: {\n    color: '#5DFAFC', // D\n  },\n  function: {\n    color: '#5DFAFC', // D\n  },\n  'tag-id': {\n    color: '#eeebff',\n  },\n  selector: {\n    color: '#eeebff',\n  },\n  'atrule-id': {\n    color: '#eeebff',\n  },\n  'code.language-javascript': {\n    color: '#c4b9fe',\n  },\n  'attr-name': {\n    color: '#c4b9fe',\n  },\n  'code.language-css': {\n    color: '#ffffff', // D\n  },\n  'code.language-scss': {\n    color: '#ffffff', // D\n  },\n  boolean: {\n    color: '#ffffff', // D\n  },\n  string: {\n    color: '#ffffff', // D\n  },\n  entity: {\n    color: '#ffffff', // D\n    cursor: 'help',\n  },\n  url: {\n    color: '#ffffff', // D\n  },\n  '.language-css .token.string': {\n    color: '#ffffff', // D\n  },\n  '.language-scss .token.string': {\n    color: '#ffffff', // D\n  },\n  '.style .token.string': {\n    color: '#ffffff', // D\n  },\n  'attr-value': {\n    color: '#ffffff', // D\n  },\n  keyword: {\n    color: '#ffffff', // D\n  },\n  control: {\n    color: '#ffffff', // D\n  },\n  directive: {\n    color: '#ffffff', // D\n  },\n  unit: {\n    color: '#ffffff', // D\n  },\n  statement: {\n    color: '#ffffff', // D\n  },\n  regex: {\n    color: '#ffffff', // D\n  },\n  atrule: {\n    color: '#ffffff', // D\n  },\n  placeholder: {\n    color: '#ffffff', // D\n  },\n  variable: {\n    color: '#ffffff', // D\n  },\n  deleted: {\n    textDecoration: 'line-through',\n  },\n  inserted: {\n    borderBottom: '1px dotted #eeebff',\n    textDecoration: 'none',\n  },\n  italic: {\n    fontStyle: 'italic',\n  },\n  important: {\n    fontWeight: 'bold',\n    color: '#c4b9fe',\n  },\n  bold: {\n    fontWeight: 'bold',\n  },\n  'pre > code.highlight': {\n    Outline: '.4em solid #8a75f5',\n    OutlineOffset: '.4em',\n  },\n  '.line-numbers.line-numbers .line-numbers-rows': {\n    borderRightColor: '#2c2937',\n  },\n  '.line-numbers .line-numbers-rows > span:before': {\n    color: '#3c3949',\n  },\n  '.line-highlight.line-highlight': {\n    background: 'linear-gradient(to right, rgba(224, 145, 66, 0.2) 70%, rgba(224, 145, 66, 0))',\n  },\n};\n\nexport default databricksDuotoneDarkTheme;\n","/**\n * Adapted from `material-light`\n * Ref: https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/b2457268891948f7005ccf539a70c000f0695bde/src/styles/prism/material-light.js#L1\n *\n * This theme overwrites colors to be similiar to the `@databricks/editor` theme.\n */\n\nconst databricksLightTheme = {\n  'code[class*=\"language-\"]': {\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    wordWrap: 'normal',\n    color: 'rgb(77, 77, 76)', // D\n    background: '#fafafa',\n    fontFamily: 'Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace',\n    fontSize: '12px', // D\n    lineHeight: '1.5em',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n  },\n  'pre[class*=\"language-\"]': {\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    wordWrap: 'normal',\n    color: 'rgb(77, 77, 76)', // D\n    background: '#fafafa',\n    fontFamily: 'Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace',\n    fontSize: '12px', // D\n    lineHeight: '1.5em',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    overflow: 'auto',\n    position: 'relative',\n    margin: '0.5em 0',\n    padding: '1.25em 1em',\n  },\n  'code[class*=\"language-\"]::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"]::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"] ::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"] ::-moz-selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"]::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"]::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'code[class*=\"language-\"] ::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  'pre[class*=\"language-\"] ::selection': {\n    background: '#cceae7',\n    color: '#263238',\n  },\n  ':not(pre) > code[class*=\"language-\"]': {\n    whiteSpace: 'normal',\n    borderRadius: '0.2em',\n    padding: '0.1em',\n  },\n  '.language-css > code': {\n    color: '#f5871f', // D\n  },\n  '.language-sass > code': {\n    color: '#f5871f', // D\n  },\n  '.language-scss > code': {\n    color: '#f5871f', // D\n  },\n  '[class*=\"language-\"] .namespace': {\n    Opacity: '0.7',\n  },\n  atrule: {\n    color: '#7c4dff',\n  },\n  'attr-name': {\n    color: '#39adb5',\n  },\n  'attr-value': {\n    color: '#f6a434',\n  },\n  attribute: {\n    color: '#f6a434',\n  },\n  boolean: {\n    color: '#7c4dff', // D\n  },\n  builtin: {\n    color: '#39adb5',\n  },\n  cdata: {\n    color: '#39adb5',\n  },\n  char: {\n    color: '#39adb5',\n  },\n  class: {\n    color: '#39adb5',\n  },\n  'class-name': {\n    color: '#6182b8',\n  },\n  comment: {\n    color: '#8e908c', // D\n  },\n  constant: {\n    color: '#7c4dff', // D\n  },\n  deleted: {\n    color: '#e53935',\n  },\n  doctype: {\n    color: '#aabfc9',\n  },\n  entity: {\n    color: '#e53935',\n  },\n  function: {\n    color: '#4271ae', // D\n  },\n  hexcode: {\n    color: '#f5871f', // D\n  },\n  id: {\n    color: '#7c4dff',\n    fontWeight: 'bold',\n  },\n  important: {\n    color: '#7c4dff',\n    fontWeight: 'bold',\n  },\n  inserted: {\n    color: '#39adb5',\n  },\n  keyword: {\n    color: '#8959a8', // D\n  },\n  number: {\n    color: '#f5871f', // D\n  },\n  operator: {\n    color: '#3e999f', // D\n  },\n  prolog: {\n    color: '#aabfc9',\n  },\n  property: {\n    color: '#39adb5',\n  },\n  'pseudo-class': {\n    color: '#f6a434',\n  },\n  'pseudo-element': {\n    color: '#f6a434',\n  },\n  punctuation: {\n    color: 'rgb(77, 77, 76)', // D\n  },\n  regex: {\n    color: '#6182b8',\n  },\n  selector: {\n    color: '#e53935',\n  },\n  string: {\n    color: '#3ba85f', // D\n  },\n  symbol: {\n    color: '#7c4dff',\n  },\n  tag: {\n    color: '#e53935',\n  },\n  unit: {\n    color: '#f5871f', // D\n  },\n  url: {\n    color: '#e53935',\n  },\n  variable: {\n    color: '#c72d4c', // D\n  },\n};\n\nexport default databricksLightTheme;\n","import { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport python from 'react-syntax-highlighter/dist/cjs/languages/prism/python';\nimport json from 'react-syntax-highlighter/dist/cjs/languages/prism/json';\n\nSyntaxHighlighter.registerLanguage('python', python);\nSyntaxHighlighter.registerLanguage('json', json);\n\nimport duotoneDarkStyle from './theme/databricks-duotone-dark';\nimport lightStyle from './theme/databricks-light';\nimport { CSSProperties, ReactNode } from 'react';\nimport { pick } from 'lodash';\n\nexport type CodeSnippetTheme = 'duotoneDark' | 'light';\n\nexport const buttonBackgroundColorDark = 'rgba(140, 203, 255, 0)';\nexport const buttonColorDark = 'rgba(255, 255, 255, 0.84)';\nexport const buttonHoverColorDark = '#8ccbffcc';\nexport const buttonHoverBackgroundColorDark = 'rgba(140, 203, 255, 0.08)';\nexport const duboisAlertBackgroundColor = '#fff0f0';\nexport const snippetPadding = '24px';\n\nconst themesStyles: Record<CodeSnippetTheme, any> = {\n  light: lightStyle,\n  duotoneDark: duotoneDarkStyle,\n};\n\nexport type CodeSnippetLanguage = 'python' | 'json';\n\nexport interface CodeSnippetProps {\n  /**\n   * The code string\n   */\n  children: string;\n  /**\n   * The actions that are displayed on the right top corner of the component\n   *  see `./actions` for built-in actions\n   */\n  actions?: NonNullable<ReactNode> | NonNullable<ReactNode>[];\n  /**\n   * The theme, default theme is `light`\n   */\n  theme?: CodeSnippetTheme;\n  /**\n   * Language of the code (`children`)\n   */\n  language: CodeSnippetLanguage;\n  /**\n   * Custom styles (passed to the internal `<pre>`)\n   */\n  style?: CSSProperties;\n  /**\n   * Whether to show line numbers on the left or not\n   */\n  showLineNumbers?: boolean;\n  /**\n   * Custom styles for line numbers\n   */\n  lineNumberStyle?: CSSProperties;\n  /**\n   * Whether or not to wrap long lines\n   */\n  wrapLongLines?: boolean;\n}\n\n/**\n * `CodeSnippet` is used for highlighting code, use this instead of\n */\nexport function CodeSnippet({\n  theme = 'light',\n  language,\n  actions,\n  style,\n  children,\n  showLineNumbers,\n  lineNumberStyle,\n  wrapLongLines,\n}: CodeSnippetProps) {\n  const customStyle = {\n    border: 'none',\n    borderRadius: 0,\n    margin: 0,\n    padding: snippetPadding,\n    ...style,\n  };\n\n  return (\n    <SyntaxHighlighter\n      showLineNumbers={showLineNumbers}\n      lineNumberStyle={lineNumberStyle}\n      language={language}\n      style={themesStyles[theme]}\n      customStyle={customStyle}\n      codeTagProps={{\n        style: pick(style, 'backgroundColor'),\n      }}\n      wrapLongLines={wrapLongLines}\n    >\n      {children}\n    </SyntaxHighlighter>\n  );\n}\n"],"names":["_ref2","name","styles","CollapsibleSection","props","title","forceOpen","showServerError","defaultCollapsed","onChange","activeKeyProp","activeKey","defaultActiveKey","formatMessage","useIntl","theme","useDesignSystemTheme","_jsx","Collapse","className","css","classNames","wrapper","bordered","expandIcon","_ref","isActive","ChevronRightIcon","id","defaultMessage","rotate","children","Panel","header","_css","importantify","color","colors","textPrimary","SectionErrorBoundary","position","outline","defaultProps","JsonPreview","json","wrapperStyle","overlayStyle","codeSnippetStyle","formattedJson","isJsonContent","useFormattedJson","style","maxHeight","overflow","_jsxs","_Fragment","CodeSnippet","language","padding","overflowX","bottom","right","left","height","background","React","parsed","JSON","parse","isJson","isObject","Date","stringify","e","_ref3","FormattedJsonDisplay","wrapLongLines","ToggleIconButton","ref","pressed","onClick","icon","onBlur","onFocus","onMouseEnter","onMouseLeave","componentId","analyticsEvents","type","remainingProps","eventContext","useDesignSystemEventComponentCallbacks","componentType","DesignSystemEventProviderComponentTypes","Button","DesignSystemEventProviderAnalyticsEventTypes","OnClick","event","cursor","width","general","heightSm","borderRadius","legacyBorders","borderRadiusMd","lineHeight","typography","lineHeightBase","border","display","alignItems","justifyContent","actionDefaultBackgroundPress","actionDefaultTextPress","textSecondary","actionDefaultBackgroundHover","actionDefaultTextHover","useRunsArtifacts","runUuids","artifactsKeyedByRun","setArtifactsKeyedByRun","useState","isLoading","setIsLoading","error","setError","useEffect","length","async","artifactsByRun","Promise","all","map","response","listArtifactsApi","runUuid","artifacts","payload","err","fetchArtifacts","_ref4","CompareRunArtifactView","runInfos","colWidth","artifactPath","setArtifactPath","commonArtifacts","_artifactsKeyedByRun$","_artifactsKeyedByRun$2","_artifactsKeyedByRun$3","Object","keys","files","file","is_dir","path","filter","i","_artifactsKeyedByRun$4","_artifactsKeyedByRun$5","_commonArtifacts","currentRunArtifacts","includes","getCommonArtifacts","FormattedMessage","backgroundColor","backgroundPrimary","flex","whiteSpace","grey300","overflowY","ArtifactViewTree","data","active","getBasename","onToggleTreebeard","borderLeft","flexDirection","index","borderBottom","spacing","md","ShowArtifactPage","artifactRootUri","artifactUri","TabPane","LegacyTabs","_ref5","CompareRunView","Component","constructor","super","compareRunViewRef","runDetailsTableRef","this","state","tableWidth","onlyShowParamDiff","onlyShowTagDiff","onlyShowMetricDiff","onResizeHandler","bind","onCompareRunTableScrollHandler","table","current","containerWidth","clientWidth","setState","blocks","querySelectorAll","forEach","_","block","target","scrollLeft","componentDidMount","pageTitle","intl","runs","Utils","updatePageTitle","window","addEventListener","dispatchEvent","Event","componentWillUnmount","removeEventListener","getTableColumnWidth","Math","round","renderExperimentNameRowItems","experiments","experimentNameMap","getExperimentNameMap","sortExperimentsById","experimentId","basename","Link","to","Routes","getExperimentPageRoute","hasMultipleExperiments","experimentIds","shouldShowExperimentNameRow","hasComparedExperimentsBefore","getExperimentPageLink","experimentName","getCompareExperimentsPageLinkText","numExperiments","values","getCompareExperimentsPageLink","getCompareExperimentsPageRoute","getExperimentLink","comparedExperimentIds","getTitle","numRuns","renderParamTable","dataRows","renderDataRows","paramLists","key","value","jsonValue","parsePythonDictString","renderPrettyJson","onScroll","renderMetricTable","metricLists","getMetricPageRoute","info","uuid","idx","undefined","formatMetric","renderArtifactTable","renderTagTable","tagLists","renderTimeRows","colWidthStyle","unknown","timeAttributes","runInfo","startTime","endTime","formatTimestamp","duration","getDuration","_ref6","_ref7","_ref8","_ref9","scope","_ref10","LegacyTooltip","placement","maxWidth","dangerouslySetAntdProps","mouseEnterDelay","render","runNames","genWidthStyle","breadcrumbs","paramsLabel","metricsLabel","artifactsLabel","tagsLabel","diffOnlyLabel","displayChartSection","shouldDisableLegacyRunCompareCharts","PageHeader","tab","ParallelCoordinatesPlotPanel","CompareRunScatter","runDisplayNames","CompareRunBox","CompareRunContour","r","_r$experimentId","_r$runUuid","getRunPageRoute","runName","Switch","label","join","checked","Spacer","size","minWidth","list","onlyShowDiff","highlightDiff","arguments","headerMap","formatter","CompareRunUtil","getKeys","k","Array","fill","records","hasDiff","some","x","rowClass","cellText","jsonString","replace","console","connect","mapStateToProps","ownProps","compareExperiments","getExperiment","getRunInfo","push","getLatestMetrics","getParams","runTags","getRunTags","visibleTags","getVisibleTagValues","_ref11","getRunDisplayName","getRunName","injectIntl","CompareRunPageImpl","requestIds","fetchExperiments","experimentRequestId","getUUID","dispatch","getExperimentApi","requestId","getRunApi","PageContainer","RequestStateWrapper","decodeURI","uri","decodedURI","decodeURIComponent","CompareRunPage","withRouterNext","location","locationSearchDecoded","search","searchValues","qs","withErrorBoundary","ErrorUtils","mlflowServices","RUN_TRACKING","IMAGE_GAP_SIZE","getImageSize","numImages","maxImagesPerRow","floor","min","ImagePlot","imageUrl","compressedImageUrl","imageSize","maxImageSize","previewVisible","setPreviewVisible","GenericSkeleton","backgroundSecondary","ImagePreviewGroup","visible","onVisibleChange","Image","src","preview","ImagePlotWithHistory","metadataByStep","step","textAlign","ImageIcon","getArtifactLocationUrl","filepath","compressed_filepath","EmptyImageGridPlot","Typography","Title","level","Text","icons","rotateLeft","UndoIcon","rotateRight","RedoIcon","zoomIn","ZoomInIcon","zoomOut","ZoomOutIcon","close","CloseIcon","ArrowLeftIcon","ArrowRightIcon","getPopupContainer","useContext","DesignSystemContext","RcImage","PreviewGroup","getContainer","v","fontFamily","fontSize","direction","wordSpacing","wordBreak","MozTabSize","OTabSize","tabSize","WebkitHyphens","MozHyphens","msHyphens","hyphens","margin","textShadow","comment","prolog","doctype","cdata","punctuation","namespace","Opacity","tag","operator","number","property","function","selector","boolean","string","entity","url","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable","deleted","textDecoration","inserted","italic","fontStyle","important","fontWeight","bold","Outline","OutlineOffset","borderRightColor","wordWrap","attribute","builtin","char","class","constant","hexcode","symbol","SyntaxHighlighter","registerLanguage","python","snippetPadding","themesStyles","light","lightStyle","duotoneDark","duotoneDarkStyle","actions","showLineNumbers","lineNumberStyle","customStyle","codeTagProps","pick"],"sourceRoot":""}